// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Movies renders correctly  Renders correctly  1`] = `
<View
  onLayout={[Function]}
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    style={
      [
        {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#7C170F",
            "elevation": 0,
            "paddingHorizontal": 0,
            "paddingTop": 0,
            "zIndex": 0,
          },
          {},
          {},
        ]
      }
      testID="appbar-header-root-layer"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "#7C170F",
            "height": 64,
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
        testID="appbar-header-outer-layer"
      >
        <View
          collapsable={false}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "#7C170F",
              "flex": 1,
              "flexDirection": "row",
              "paddingBottom": undefined,
              "paddingHorizontal": 4,
              "paddingLeft": undefined,
              "paddingRight": undefined,
              "paddingTop": undefined,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 0,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 0,
            }
          }
          testID="appbar-header"
        >
          <View
            pointerEvents="box-none"
            style={
              [
                {
                  "flex": 1,
                  "paddingHorizontal": 12,
                },
                {
                  "paddingHorizontal": 0,
                },
                [
                  {
                    "marginLeft": 12,
                  },
                  false,
                  undefined,
                ],
              ]
            }
            testID="appbar-content"
          >
            <Text
              accessibilityRole="header"
              accessibilityTraits="header"
              accessible={true}
              numberOfLines={1}
              style={
                [
                  {
                    "textAlign": "left",
                  },
                  {
                    "color": "rgba(28, 27, 31, 1)",
                    "writingDirection": "ltr",
                  },
                  [
                    {
                      "fontFamily": "System",
                      "fontSize": 22,
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 28,
                    },
                    [
                      {
                        "color": "#FFF",
                        "fontFamily": "System",
                        "fontSize": 22,
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 28,
                      },
                      false,
                      undefined,
                    ],
                  ],
                ]
              }
              testID="appbar-content-title-text"
            >
              [missing "en.screen2Title" translation]
            </Text>
          </View>
          <View>
            <View
              collapsable={false}
            >
              <View
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
              >
                <View
                  ctx={
                    {
                      "menuActions": {
                        "_getOpenedMenu": [Function],
                        "_notify": [Function],
                        "closeMenu": [Function],
                        "isMenuOpen": [Function],
                        "openMenu": [Function],
                        "toggleMenu": [Function],
                      },
                      "menuRegistry": {
                        "getAll": [Function],
                        "getMenu": [Function],
                        "setOptionsCustomStyles": [Function],
                        "subscribe": [Function],
                        "unsubscribe": [Function],
                        "updateLayoutInfo": [Function],
                      },
                    }
                  }
                  style={
                    [
                      undefined,
                      undefined,
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                      }
                    }
                  >
                    <Text
                      style={
                        {
                          "color": "#FFF",
                          "fontSize": 32,
                        }
                      }
                    >
                      English
                    </Text>
                    <View
                      collapsable={false}
                      style={
                        {
                          "backgroundColor": "transparent",
                          "borderRadius": 24,
                          "height": 48,
                          "margin": 6,
                          "shadowColor": "#000",
                          "shadowOffset": {
                            "height": 0,
                            "width": 0,
                          },
                          "shadowOpacity": 0,
                          "shadowRadius": 0,
                          "width": 48,
                        }
                      }
                      testID="icon-button-container-outer-layer"
                    >
                      <View
                        collapsable={false}
                        style={
                          {
                            "backgroundColor": "transparent",
                            "borderColor": "rgba(121, 116, 126, 1)",
                            "borderRadius": 24,
                            "borderWidth": 0,
                            "elevation": 0,
                            "flex": 1,
                            "overflow": "hidden",
                            "shadowColor": "#000",
                            "shadowOffset": {
                              "height": 0,
                              "width": 0,
                            },
                            "shadowOpacity": 0,
                            "shadowRadius": 0,
                          }
                        }
                        testID="icon-button-container"
                      >
                        <View
                          accessibilityComponentType="button"
                          accessibilityRole="button"
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": undefined,
                              "disabled": true,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityTraits="button"
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          centered={true}
                          collapsable={false}
                          focusable={true}
                          hitSlop={
                            {
                              "bottom": 6,
                              "left": 6,
                              "right": 6,
                              "top": 6,
                            }
                          }
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            [
                              {
                                "overflow": "hidden",
                              },
                              [
                                {
                                  "alignItems": "center",
                                  "flexGrow": 1,
                                  "justifyContent": "center",
                                },
                                {
                                  "borderRadius": 24,
                                },
                              ],
                            ]
                          }
                          testID="icon-button"
                        >
                          <View
                            style={
                              [
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {
                                  "height": 32,
                                  "width": 32,
                                },
                              ]
                            }
                          >
                            <View
                              collapsable={false}
                              style={
                                {
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 1,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                  "transform": [
                                    {
                                      "rotate": "0deg",
                                    },
                                  ],
                                }
                              }
                              testID="cross-fade-icon-current"
                            >
                              <Text
                                accessibilityElementsHidden={true}
                                allowFontScaling={false}
                                importantForAccessibility="no-hide-descendants"
                                pointerEvents="none"
                                selectable={false}
                                style={
                                  [
                                    {
                                      "color": "#FFF",
                                      "fontSize": 32,
                                    },
                                    [
                                      {
                                        "lineHeight": 32,
                                        "transform": [
                                          {
                                            "scaleX": 1,
                                          },
                                        ],
                                      },
                                      {
                                        "backgroundColor": "transparent",
                                      },
                                    ],
                                    {
                                      "fontFamily": "Material Design Icons",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    {},
                                  ]
                                }
                              >
                                󰅀
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        {
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          {
            "alignSelf": "center",
            "color": "#000",
            "fontSize": 40,
          }
        }
        testID="loadingTxt"
      >
        [missing "en.loading" translation]
      </Text>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;
